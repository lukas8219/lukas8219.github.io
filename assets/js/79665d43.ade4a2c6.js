"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2111],{66920:e=>{e.exports=JSON.parse('{"label":"kubernetes","permalink":"/docs/tags/kubernetes","allTagsPath":"/docs/tags","count":6,"items":[{"id":"learn-in-public/Engineering/Infrastructure/Kubernetes/CoreDNS","title":"CoreDNS","description":"CoreDNS is one of the most robust and cloud-native technologies of DNS Service. It comes with a lot of plugins and configurations and it\'s easily extensible. has native plugins for Kubernetes and it\'s the go-to for kube-dns","permalink":"/docs/learn-in-public/Engineering/Infrastructure/Kubernetes/CoreDNS"},{"id":"learn-in-public/Engineering/Infrastructure/Kubernetes/Differences between NodePort, ClusterIP and LoadBalancer","title":"Differences between NodePort, ClusterIP and LoadBalancer","description":"https://www.baeldung.com/ops/kubernetes-service-types","permalink":"/docs/learn-in-public/Engineering/Infrastructure/Kubernetes/Differences between NodePort, ClusterIP and LoadBalancer"},{"id":"learn-in-public/Engineering/Infrastructure/Kubernetes/Finalizers","title":"Finalizers","description":"Finalizers are definitions for how to gargabe some resource within kubernetes","permalink":"/docs/learn-in-public/Engineering/Infrastructure/Kubernetes/Finalizers"},{"id":"learn-in-public/Engineering/Infrastructure/Kubernetes/How to Access a Service in Another Namespace","title":"How to Access a Service in Another Namespace","description":"kubernetes #externalname #namespaces #dns #k8s","permalink":"/docs/learn-in-public/Engineering/Infrastructure/Kubernetes/How to Access a Service in Another Namespace"},{"id":"learn-in-public/Engineering/Infrastructure/Kubernetes/Kubernetes shorcuts and alias","title":"Kubernetes shorcuts and alias","description":"Shortcut to set current context namespace","permalink":"/docs/learn-in-public/Engineering/Infrastructure/Kubernetes/Kubernetes shorcuts and alias"},{"id":"learn-in-public/Engineering/Infrastructure/Kubernetes/Pod DNS - Config and Policies","title":"Pods DNS - Configs and Policies","description":"In Kubernetes Networking everything is virtualized - where inter-pod communication is done via CNI - or better rephrased, this responsibility is from a CNI. In many cases, when Pods are hosted on the same network - the \\"network\\" calls never leave the kernel-level and are routed by Linux Namespaces.","permalink":"/docs/learn-in-public/Engineering/Infrastructure/Kubernetes/Pod DNS - Config and Policies"}]}')}}]);