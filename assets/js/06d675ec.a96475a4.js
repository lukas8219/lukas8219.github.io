"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[471],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,k=c["".concat(s,".").concat(m)]||c[m]||d[m]||r;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},27110:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const r={tags:["challenges","networking"]},l=void 0,o={unversionedId:"learn-in-public/Engineering/Infrastructure/Networking Challenges",id:"learn-in-public/Engineering/Infrastructure/Networking Challenges",title:"Networking Challenges",description:"ChatGTP Thread https://chatgpt.com/share/67245c1c-b13c-800f-b76c-efac8948147f-",source:"@site/docs/learn-in-public/1. Engineering/Infrastructure/Networking Challenges.md",sourceDirName:"learn-in-public/1. Engineering/Infrastructure",slug:"/learn-in-public/Engineering/Infrastructure/Networking Challenges",permalink:"/docs/learn-in-public/Engineering/Infrastructure/Networking Challenges",draft:!1,tags:[{label:"challenges",permalink:"/docs/tags/challenges"},{label:"networking",permalink:"/docs/tags/networking"}],version:"current",frontMatter:{tags:["challenges","networking"]},sidebar:"learn-in-public",previous:{title:"Pods DNS - Configs and Policies",permalink:"/docs/learn-in-public/Engineering/Infrastructure/Kubernetes/Pod DNS - Config and Policies"},next:{title:"TLS and Certificates",permalink:"/docs/learn-in-public/Engineering/Infrastructure/TLS and Certificates"}},s={},p=[{value:"<strong>1. Basic Namespace Creation and Communication</strong>",id:"1-basic-namespace-creation-and-communication",level:3},{value:"Tips:",id:"tips",level:5},{value:"<strong>2. Routing Through a Third Namespace</strong>",id:"2-routing-through-a-third-namespace",level:3},{value:"Step by Step",id:"step-by-step",level:5},{value:"Solution &amp; Tips",id:"solution--tips",level:5},{value:"<strong>3. Configuring a Virtual NAT Gateway</strong>",id:"3-configuring-a-virtual-nat-gateway",level:3},{value:"Step by Step",id:"step-by-step-1",level:4},{value:"Take Away Points",id:"take-away-points",level:4},{value:"<strong>4. Bridging Multiple Namespaces on a Virtual Network</strong>",id:"4-bridging-multiple-namespaces-on-a-virtual-network",level:3},{value:"Step by Step",id:"step-by-step-2",level:4},{value:"Takeaway Points",id:"takeaway-points",level:4},{value:"<strong>5. Isolated DNS Server in a Namespace</strong>",id:"5-isolated-dns-server-in-a-namespace",level:3},{value:"Step by Step",id:"step-by-step-3",level:4},{value:"Takeway Points",id:"takeway-points",level:3},{value:"<strong>6. Simulate a VPN Gateway and Split-Tunneling</strong>",id:"6-simulate-a-vpn-gateway-and-split-tunneling",level:3},{value:"<strong>7. Packet Filtering with iptables</strong>",id:"7-packet-filtering-with-iptables",level:3},{value:"<strong>8. Multi-Hop Routing with Multiple Routers</strong>",id:"8-multi-hop-routing-with-multiple-routers",level:3},{value:"<strong>9. Simulate a Failover Route</strong>",id:"9-simulate-a-failover-route",level:3},{value:"<strong>10. Load Balancing Traffic Between Namespaces</strong>",id:"10-load-balancing-traffic-between-namespaces",level:3}],u={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"ChatGTP Thread ",(0,i.kt)("a",{parentName:"p",href:"https://chatgpt.com/share/67245c1c-b13c-800f-b76c-efac8948147f-"},"https://chatgpt.com/share/67245c1c-b13c-800f-b76c-efac8948147f-")),(0,i.kt)("h3",{id:"1-basic-namespace-creation-and-communication"},(0,i.kt)("strong",{parentName:"h3"},"1. Basic Namespace Creation and Communication")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Goal"),": Create isolated network namespaces and establish basic communication."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create two network namespaces (",(0,i.kt)("inlineCode",{parentName:"li"},"ns1"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns2"),") and connect them with a virtual Ethernet (",(0,i.kt)("inlineCode",{parentName:"li"},"veth"),") pair."),(0,i.kt)("li",{parentName:"ul"},"Assign IP addresses in the same subnet (e.g.,\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"10.0.0.1"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"10.0.0.2"),")."),(0,i.kt)("li",{parentName:"ul"},"Test connectivity with\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ping"),"\xa0from one namespace to the other.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Commands"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ip netns add ns1\nip netns add ns2\n\nip link add veth1 type veth peer name veth2\nip link set veth1 netns ns1\nip link set veth2 netns ns2\n\nip netns exec ns1 ip addr add 10.0.0.1/24 dev veth1\nip netns exec ns2 ip addr add 10.0.0.2/24 dev veth2\n\nip netns exec ns1 ip link set veth1 up\nip netns exec ns2 ip link set veth2 up\n")),(0,i.kt)("h5",{id:"tips"},"Tips:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Play around  IP ranges. What happens if you restrict the IP range to ",(0,i.kt)("inlineCode",{parentName:"li"},"/32"),"? Can you communicate? Why not?",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Because we assigned a single IP - the IP range of 10.0.0.1/32 is 10.0.0.1~10.0.0.1"))),(0,i.kt)("li",{parentName:"ul"},"if you can't communicate, is there anyway to solve it?",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"we can use ",(0,i.kt)("inlineCode",{parentName:"li"},"ip route")," to establish a routing mechanism for a wider ip range"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ip netns exec ns1 ip route add 10.0.0.0/16 via 10.0.0.1 dev veth1")),(0,i.kt)("li",{parentName:"ul"},"It needs to be configured in both sides. If one side is not configured for routing, it doesn't receive back")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"2-routing-through-a-third-namespace"},(0,i.kt)("strong",{parentName:"h3"},"2. Routing Through a Third Namespace")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Goal"),": Set up a basic router namespace (",(0,i.kt)("inlineCode",{parentName:"p"},"router"),") between two other namespaces (",(0,i.kt)("inlineCode",{parentName:"p"},"ns1"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"ns2"),")."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create three namespaces:\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns1"),",\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns2"),", and\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"router"),"."),(0,i.kt)("li",{parentName:"ul"},"Use\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"veth"),"\xa0pairs to connect\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns1"),"\xa0to\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"router"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns2"),"\xa0to\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"router"),"."),(0,i.kt)("li",{parentName:"ul"},"Configure IP forwarding in\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"router"),"\xa0to allow packets to pass through."),(0,i.kt)("li",{parentName:"ul"},"Add routes in\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns1"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns2"),"\xa0so they can reach each other via\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"router"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Commands"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ip netns add router \n# Connect ns1 to router, and ns2 to router, using `veth` pairs as in Exercise 1.\n# Enable IP forwarding in router:\nip netns exec router sysctl -w net.ipv4.ip_forward=1\n# Set up routes in ns1 and ns2 to route traffic through the router.\n")),(0,i.kt)("h5",{id:"step-by-step"},"Step by Step"),(0,i.kt)("h5",{id:"solution--tips"},"Solution & Tips"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The key-point here is how you configure subnets."),(0,i.kt)("li",{parentName:"ul"},"Subnets are important because each device inside a subnet is expected to be reached without a router."),(0,i.kt)("li",{parentName:"ul"},"I was assigning 10.0.0.0/24 for all ",(0,i.kt)("inlineCode",{parentName:"li"},"ns1")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"ns2")," - which at the router level was very confusing because it could not decide which device it would route traffic from a certain IP range."),(0,i.kt)("li",{parentName:"ul"},"So If it received 10.0.0.1/24 - and it has 2 devices configured for 10.0.0.0/24 it doesnt know which one to route for."),(0,i.kt)("li",{parentName:"ul"},"A second take away point is: Gateway are IP's assigned to the peer veth. So if ",(0,i.kt)("inlineCode",{parentName:"li"},"ns1")," (device) is connected to the router - router is only aware of it's Gateway IP"),(0,i.kt)("li",{parentName:"ul"},"So to make this work you need",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ns1")," to have a subnet like 10.0.0.1/24 - which ranges from 10.0.0.1~10.0.0.254"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ns2")," to have subnet like 10.0.1.0/24 - which ranges from 10.0.1.1~10.0.1.254"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"router")," to have assigned end-range IP's from each subnet ns1 and ns2 to be their gateways"),(0,i.kt)("li",{parentName:"ul"},"To properly route traffic and let ",(0,i.kt)("inlineCode",{parentName:"li"},"ns1")," reach ",(0,i.kt)("inlineCode",{parentName:"li"},"ns2")," - you need to route all traffic from the target subnet - ",(0,i.kt)("inlineCode",{parentName:"li"},"ns2")," is 10.0.1.0/24 to ",(0,i.kt)("inlineCode",{parentName:"li"},"ns1")," gateway in the router - 10.0.0.254 (repeat the same at the ns2)"))),(0,i.kt)("li",{parentName:"ul"},"Ensure the namespaces have the DIRECT and LOCAL ip routing - which is defaulted whenever assigning IPs.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"10.0.0.0/24 scope link src 10.0.0.1 dev veth1")," means this subnet is DIRECTLY RECHEABLE via veth1 interface and don't need any gateway"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"10.0.0.0/24 via 10.0.0.1 dev veth1")," is wrong because you are treating ",(0,i.kt)("inlineCode",{parentName:"li"},"veth1")," as Gateway"))),(0,i.kt)("li",{parentName:"ul"},"Remember when trying to make two namespaces reacheable ",(0,i.kt)("strong",{parentName:"li"},"ALWAYS")," make sure each ns knows how to route packets in ",(0,i.kt)("inlineCode",{parentName:"li"},"ip route"))),(0,i.kt)("p",null,"ChatGPT conversations:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://chatgpt.com/share/67251c67-49c8-800f-b247-401bbe73635f"},"https://chatgpt.com/share/67251c67-49c8-800f-b247-401bbe73635f"))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"3-configuring-a-virtual-nat-gateway"},(0,i.kt)("strong",{parentName:"h3"},"3. Configuring a Virtual NAT Gateway")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Goal"),": Simulate a NAT setup with a namespace acting as a gateway."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Use\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"iptables"),"\xa0in a\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"gateway"),"\xa0namespace to NAT outbound traffic for an isolated\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"client"),"\xa0namespace."),(0,i.kt)("li",{parentName:"ul"},"Set up IP forwarding and a default route in\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"client"),"\xa0to send traffic to\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"gateway"),"."),(0,i.kt)("li",{parentName:"ul"},"Verify that traffic from\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"client"),"\xa0to an external IP is masqueraded by\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"gateway"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Challenge"),": Use\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"tcpdump"),"\xa0in\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"gateway"),"\xa0to observe NAT translation."),(0,i.kt)("h4",{id:"step-by-step-1"},"Step by Step"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Setup the same namespace and router config from #2")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# create a veth to link router ns with host interfaces\nip link add internet-veth type veth peer name veth-router\n# link one end to the router namespace\nip link set internet-veth netns router\nip netns exec router ip link set internet-veth up\n\n# add initial range IP to router namespace\nip netns exec router ip addr add 192.168.1.1/24 dev internet-veth\n# add end-range IP to eth that will talk to host eth0\nip addr add 192.168.1.254/24 dev veth-router\n\n\n# The NAT config makes all traffic leaving via this interface to have the IP rewritten with the eth0 IP - if we sent our private IP, the gateway wouldn't know how to answer back to us.\n\n# enable NAT in the host\nip netns exec router iptables -t nat -j MASQUERADE -o eth0 -A POSTROUTING\n\n# enable NAT in the router\nip netns exec router iptables -t nat -j MASQUERADE -o internet-veth -A POSTROUTING\n")),(0,i.kt)("h4",{id:"take-away-points"},"Take Away Points"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"NAT configuration is crucial to make devices in private networks to reach the internet."),(0,i.kt)("li",{parentName:"ul"},"NAT configuration makes it possible for ISP Gateway respond back with packets since you masquerade the outgoing traffic IP with an IP they can trace you - and not with your private IP."),(0,i.kt)("li",{parentName:"ul"},"But why do I need NAT in both host and router?",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Because the IP that would reach the host is unknown and not within any interfaces ip ranges that it knows."),(0,i.kt)("li",{parentName:"ul"},"So the ",(0,i.kt)("inlineCode",{parentName:"li"},"router")," needs to translate the IP address to something the host will understand and know where to redirect it whenever the packet is coming back")))),(0,i.kt)("p",null,"ChatGPT conversation:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://chatgpt.com/c/672525f7-e570-800f-ab6e-4f714b29ede6"},"https://chatgpt.com/c/672525f7-e570-800f-ab6e-4f714b29ede6"))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"4-bridging-multiple-namespaces-on-a-virtual-network"},(0,i.kt)("strong",{parentName:"h3"},"4. Bridging Multiple Namespaces on a Virtual Network")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Goal"),": Create a virtual switch using a bridge and connect multiple namespaces to it."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Set up a bridge (",(0,i.kt)("inlineCode",{parentName:"li"},"br0"),") in the root namespace."),(0,i.kt)("li",{parentName:"ul"},"Attach\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"veth"),"\xa0pairs from multiple namespaces (",(0,i.kt)("inlineCode",{parentName:"li"},"ns1"),",\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns2"),",\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns3"),") to the bridge."),(0,i.kt)("li",{parentName:"ul"},"Assign IP addresses in the same subnet, then test communication between all namespaces.\n",(0,i.kt)("strong",{parentName:"li"},"Challenge"),": Try disconnecting one namespace and observe if the rest can still communicate.")),(0,i.kt)("h4",{id:"step-by-step-2"},"Step by Step"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# set up namespace, create veth, assign it and turn it up\n#for each namespace to create\nNETNS={{netns_name}}\nip netns add $NETNS\nip link add veth_$NETNS type veth peer name veth-$NETNS-bridge\nip link set veth_$NETNS netns $NETNS\nip netns exec $NETNS ip link set veth_$NETNS up\n# increment end-range\nip netns exec $NETNS ip add 10.100.0.2/24 dev veth_$NETNS\n\n#create bridge device\nip link add br0 type bridge\nip link set br0 up\nip addr add 10.100.0.1/24 dev br0\n# for each veth created - bind them to the bridge device\nip link set veth-$NETNS-bridge master br0\nip link set veth-$NETNS up\n\n#verify with some target IP\nip netns exec veth_$NETNS ping 10.100.0.3/24\n")),(0,i.kt)("h4",{id:"takeaway-points"},"Takeaway Points"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bridges")," are virtual devices meant to connect interfaces with the Kernel"),(0,i.kt)("li",{parentName:"ul"},"All devices within the bridge must share the same subnet")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"5-isolated-dns-server-in-a-namespace"},(0,i.kt)("strong",{parentName:"h3"},"5. Isolated DNS Server in a Namespace")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Goal"),": Configure a namespace as a DNS server and point other namespaces to it."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Set up\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"dnsmasq"),"\xa0or a lightweight DNS server in\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"dns-server"),"\xa0namespace."),(0,i.kt)("li",{parentName:"ul"},"Configure other namespaces (",(0,i.kt)("inlineCode",{parentName:"li"},"ns1"),",\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns2"),") to use\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"dns-server"),"\xa0for DNS resolution."),(0,i.kt)("li",{parentName:"ul"},"Add custom DNS entries and test resolution from\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns1"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns2"),".")),(0,i.kt)("h4",{id:"step-by-step-3"},"Step by Step"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# set up ns and router configurations\n\n#create namespace and configure it to connect to the router to be reacheable\nip netns add dns-server\nip link add dns-veth type veth peer name dns-gateway\nip link set dns-veth netns dns-server\nip netns exec dns-server ip link set dns-veth up\nip netns exec dns-server ip addr add 10.0.2.1/24 dev dns-veth #assign other subnet\n\nip link set dns-gateway netns router\nip netns exec router ip link set dns-gateway up\nip netns exec router ip addr add 10.0.2.254/24 dev dns-gateway\n\n# ensure loopback it\'s up and running\nip netns exec dns-server ip route add 10.0.0.0/16 via 10.0.2.254\n\n#ensure ns1 can ping dns-server IP and vice-verse\nip netns exec ns1 ping 10.0.2.1\nip netns exec dns-server ping 10.0.1.1\n\n#configure dnsmasq\necho "\ninterface=dns-veth\nbind-interfaces\nserver=8.8.8.8\nlisten-address=10.0.2.1\naddress=/my-server.com/10.100.0.1\n" > dnsmasq.conf\nip netns exec dns-server dnsmasq --conf-file=/path/to/file\n\n#ensure the server is working by forcing dig\nip netns exec dig @10.0.2.1 my-server.com\n\n#dig within ns1\nip netns exec ns1 dig @10.0.2.1 my-server.com\n\n#add value to resolve.conf in ns1 -- WARNING: This alter the host resolv.conf (is there any easier way?)\nip netns exec ns1 bash -c "echo nameserver 10.0.2.1 > /etc/resolv.conf"\nip netns exec ns1 dig my-server.com\n\n#Can you resolve public DNS? Like google.com?\n')),(0,i.kt)("h3",{id:"takeway-points"},"Takeway Points"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"you can debug DNS servers using ",(0,i.kt)("inlineCode",{parentName:"li"},"dig @<DNS_SERVER_IP>")),(0,i.kt)("li",{parentName:"ul"},"I was having problem when assigning the IP address from the veth. Timing out when running the dig command. The main symptom was due to now being able to ping the veth IP itself from within the namespace. The root cause was ",(0,i.kt)("inlineCode",{parentName:"li"},"loopback")," interface being ",(0,i.kt)("inlineCode",{parentName:"li"},"down")),(0,i.kt)("li",{parentName:"ul"},"Although PING is working, we need to configure networking rules/iptables for another types of packets like UDP/TCP for proper DNS resolution"),(0,i.kt)("li",{parentName:"ul"},"DNS servers use TCP for ZoneTransfer and UDP for name resolution.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"DNS uses TCP for Zone transfer"),"\xa0and UDP for name, and queries either regular (primary) or reverse. UDP can be used to exchange small information whereas TCP must be used to exchange information larger than 512 bytes"))),(0,i.kt)("li",{parentName:"ul"},"tcpdump is useful to understand the routes from packets",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"is host receiving packets? is it routing correctly?"),(0,i.kt)("li",{parentName:"ul"},"current config is routing everything right from router to host"),(0,i.kt)("li",{parentName:"ul"},"by testing icmp vs tcp packets routing:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"we could notice that HOST eth0 is not receivigin/routing any packets to public network"),(0,i.kt)("li",{parentName:"ul"},"the packets stop at veth-host which is the peer from the router."))))),(0,i.kt)("li",{parentName:"ul"},"Remember to setup FORWARD reules in iptables AND check ufw",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"iptables -I FORWARD 6 -o veth-host -i eth0 -j ACCEPT"),(0,i.kt)("li",{parentName:"ul"},"iptables -I FORWARD 6 -i veth-host -o eth0 -j ACCEPT"))),(0,i.kt)("li",{parentName:"ul"},"ICMP packets are often used for diagnostic so some firewalls just let it work. They behave very differently than TCP/UDP so it's always nice to check the FORWARDING rules for these packets")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"6-simulate-a-vpn-gateway-and-split-tunneling"},(0,i.kt)("strong",{parentName:"h3"},"6. Simulate a VPN Gateway and Split-Tunneling")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Goal"),": Create a VPN-like namespace that routes specific traffic while allowing other traffic to bypass it."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Set up\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"vpn-gateway"),"\xa0namespace with IP forwarding and\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"iptables"),"\xa0rules for masquerading."),(0,i.kt)("li",{parentName:"ul"},"Configure\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"client"),"\xa0namespace to send specific IP ranges (like\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"10.0.0.0/24"),") through\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"vpn-gateway"),"\xa0while routing other traffic directly.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Challenge"),": Verify split-tunneling by testing access to IPs both inside and outside the specified range."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"7-packet-filtering-with-iptables"},(0,i.kt)("strong",{parentName:"h3"},"7. Packet Filtering with iptables")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Goal"),": Use\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"iptables"),"\xa0to filter traffic between namespaces."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Configure\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"firewall"),"\xa0namespace between two other namespaces (",(0,i.kt)("inlineCode",{parentName:"li"},"ns1"),",\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns2"),")."),(0,i.kt)("li",{parentName:"ul"},"Add\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"iptables"),"\xa0rules in\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"firewall"),"\xa0to allow only specific protocols (e.g., TCP on port 80)."),(0,i.kt)("li",{parentName:"ul"},"Test connectivity for both allowed and blocked protocols.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Challenge"),": Set up logging to track dropped packets and analyze the logs."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"8-multi-hop-routing-with-multiple-routers"},(0,i.kt)("strong",{parentName:"h3"},"8. Multi-Hop Routing with Multiple Routers")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Goal"),": Create a network with multiple hops between namespaces."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Set up three namespaces (",(0,i.kt)("inlineCode",{parentName:"li"},"ns1"),",\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"router1"),",\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"router2"),", and\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns2"),") to simulate a network with multiple hops."),(0,i.kt)("li",{parentName:"ul"},"Configure routes and IP forwarding in each router so\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns1"),"\xa0can communicate with\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns2"),"\xa0through both\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"router1"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"router2"),"."),(0,i.kt)("li",{parentName:"ul"},"Test connectivity and use\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"traceroute"),"\xa0to see the multi-hop path.")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"9-simulate-a-failover-route"},(0,i.kt)("strong",{parentName:"h3"},"9. Simulate a Failover Route")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Goal"),": Set up two paths to a destination and simulate a failover when one path fails."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create two paths from\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns1"),"\xa0to\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns2"),"\xa0via different routers (",(0,i.kt)("inlineCode",{parentName:"li"},"router1"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"router2"),")."),(0,i.kt)("li",{parentName:"ul"},"Configure\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"ns1"),"\xa0with two default routes with different priorities, preferring one router over the other."),(0,i.kt)("li",{parentName:"ul"},"Test connectivity and simulate a failure by bringing down the primary router interface.")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"10-load-balancing-traffic-between-namespaces"},(0,i.kt)("strong",{parentName:"h3"},"10. Load Balancing Traffic Between Namespaces")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Goal"),": Load-balance traffic between two destinations."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Set up two namespaces (",(0,i.kt)("inlineCode",{parentName:"li"},"server1"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"server2"),") and configure a third namespace (",(0,i.kt)("inlineCode",{parentName:"li"},"load-balancer"),") to balance traffic between them."),(0,i.kt)("li",{parentName:"ul"},"Use\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"iptables"),"\xa0in\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"load-balancer"),"\xa0to round-robin or split traffic directed at a specific IP between\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"server1"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"server2"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Challenge"),": Use\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"curl"),"\xa0to send requests and observe how traffic is split across\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"server1"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"server2"),"."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"These exercises will give you practical exposure to essential networking concepts in a controlled, virtual environment. They should take you through increasingly complex scenarios, helping you gain confidence in setting up, troubleshooting, and managing networks using namespaces."))}d.isMDXComponent=!0}}]);